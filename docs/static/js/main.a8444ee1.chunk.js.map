{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputaValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFecthGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEXC,mBAAS,IAFE,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAmBhD,OACI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAQ,IAEzBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAe,OAOf,2BACCO,KAAK,OACLC,MAAQT,EACRU,SApBiB,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,Y,uBCRnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEjC,OACI,yBAAKc,UAAW,0CACZ,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAKA,KCFJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAU,CACNf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAEGqB,EDbwBK,CAAc1B,GAAjCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAEpB,OACI,oCACI,wBAAIJ,UAAU,qCAAd,IAAqDhB,EAArD,KACEoB,GAAW,uBAAGJ,UAAU,oCAAb,cAEZ,yBAAKA,UAAU,aAERH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACAiB,IAAQjB,EAAIC,IAEPD,UEZhBkB,EAAe,WAAO,IAAD,EACM1C,mBAAS,CAAC,KADhB,mBACvB2C,EADuB,KACX5C,EADW,KAO9B,OACI,oCACI,8CACA,kBAAC,EAAD,CAAaA,cAAkBA,IAC/B,6BAIA,4BAEQ4C,EAAWpB,KAAI,SAAET,GAAF,OAEX,kBAAC,EAAD,CACI2B,IAAQ3B,EACRA,SAAaA,UClBzC8B,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.a8444ee1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputaValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputaValue(e.target.value);\r\n    };\r\n\r\n    const handleSumbit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length >2)\r\n        {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputaValue('');\r\n        }\r\n        \r\n    };\r\n\r\n    return (\r\n        <form onSubmit={ handleSumbit }>\r\n            <input\r\n             type=\"text\"\r\n             value={ inputValue }\r\n             onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async ( category ) => {\r\n    \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=3ktIYy0YvBSaCtFcv2QzpLTDV7rL2tkY`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n    const gifs = data.map((img) => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url } ) => {\r\n    // console.log( title, url )\r\n    return (\r\n        <div className =\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFecthGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFecthGifs( category );\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n            \r\n             <div className=\"card-grid\">\r\n                { \r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                        key = { img.id }\r\n                        //img = { img } \r\n                        { ...img }\r\n                        />\r\n                    )) \r\n                }\r\n            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFecthGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => { \r\n                setstate( {\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [category])\r\n\r\n    return state; // {data: [], loading: true}\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['']);\r\n\r\n    // const handledAdd = () => {\r\n    //     setCategories([...categories, 'Revocation']);\r\n    // };\r\n\r\n    return(\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories = { setCategories } />\r\n            <hr/>\r\n\r\n            \r\n\r\n            <ol>\r\n                {\r\n                    categories.map(( category ) =>  \r\n                    // <ul key={ category }> { category } </ul>\r\n                        <GifGrid \r\n                            key = { category } \r\n                            category = { category } \r\n                        />\r\n                    )\r\n                    \r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\n\n\n\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}